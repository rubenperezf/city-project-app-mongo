{"ast":null,"code":"var _jsxFileName = \"/Users/rubenperezfeijoo/Desktop/JRS/JRS-week7/city-project-app-mongo/src/components/Europe.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Form from \"./Form\";\nexport default class Europe extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:2500/importantCities\").then(res => {\n      const city = res.data;\n      this.setState({\n        city\n      });\n    });\n  }\n\n  render() {\n    if (this.state.jokes.value.citiesInstances === undefined) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Not here\");\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.state.city.citiesInstances.filter(city => city.continent === \"explicit\").map(city => React.createElement(\"li\", {\n      key: city.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, jcity.name)));\n  }\n\n}","map":{"version":3,"sources":["/Users/rubenperezfeijoo/Desktop/JRS/JRS-week7/city-project-app-mongo/src/components/Europe.jsx"],"names":["React","axios","Form","Europe","Component","state","city","componentDidMount","get","then","res","data","setState","render","jokes","value","citiesInstances","undefined","filter","continent","map","id","jcity","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAChDC,KADgD,GACxC;AACJC,MAAAA,IAAI,EAAE;AADF,KADwC;AAAA;;AAIhDC,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,KAAK,CAACO,GAAN,0CACGC,IADH,CACQC,GAAG,IAAI;AACX,YAAMJ,IAAI,GAAGI,GAAG,CAACC,IAAjB;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAJH;AAKD;;AAEDO,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,KAAjB,CAAuBC,eAAvB,KAA2CC,SAA/C,EAA0D;AACxD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKZ,KAAL,CAAWC,IAAX,CAAgBU,eAAhB,CACEE,MADF,CACSZ,IAAI,IAAIA,IAAI,CAACa,SAAL,KAAkB,UADnC,EAEEC,GAFF,CAEMd,IAAI,IACP;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACe,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBC,KAAK,CAACC,IAAzB,CAHH,CADD,CADF;AASD;;AAzB6C","sourcesContent":["import React from \"react\"\nimport axios from \"axios\"\nimport Form from \"./Form\"\n\nexport default class Europe extends React.Component {\n    state = {\n        city: []\n    };\n    componentDidMount() {\n        axios.get(`http://localhost:2500/importantCities`)\n          .then(res => {\n            const city = res.data;\n            this.setState({ city });\n          })\n      }\n    \n      render() {\n        if (this.state.jokes.value.citiesInstances === undefined) {\n          return <h1>Not here</h1>;\n        }\n        return (\n          <ul>\n          {this.state.city.citiesInstances\n            .filter(city => city.continent=== \"explicit\")\n            .map(city => (\n              <li key={city.id}>{jcity.name}</li>\n            ))}\n        </ul>\n        )\n      }\n    }\n"]},"metadata":{},"sourceType":"module"}